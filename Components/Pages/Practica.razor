@page "/practica"
@using Grilla.models;
@using Grilla.Components.Shared;
@using Grilla.Services;
@inject HttpClient Http
@inject DataService dataService


<style>

    .contenedor-cards {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        gap: 2rem;
    }

</style>

<PageTitle>Practica</PageTitle>
<h1>Practica de Prueba Técnica </h1>

<div class="contenedor-cards">
        <!-- Muestra un mensaje de error si ocurre -->
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="error-message">@ErrorMessage</div>
        }

        <!-- Muestra los items obtenidos del servicio -->
        @if (Items != null && Items.Any())
        {
            @foreach (var item in Items)
            {
                <Card Codigo="@item.Codigo" Descripcion="@item.Descripcion" Estado="@item.Estado" ></Card>
            }
        }
        else
        {
            <p>No hay items disponibles.</p>
        }
</div>

@code {
    // VARIABLES PARA ALMACENAR LOS DATOS
    private List<Item>? Items;
    private string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // OBTENER LOS DATOS DEL SERVICIO
            Items = await dataService.GetDataAsync();

        }
        catch (Exception ex)
        {
            // MANEJO DE ERRORES
            ErrorMessage = $"Error al obtener items: {ex.Message}";
        }
    }
}

